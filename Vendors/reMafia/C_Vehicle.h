#pragma once

#include <LS3D.h>
#include <I3D_frame.h>

class I3D_sound;
class I3D_model;
class C_car;

struct S_CARINIT {
    struct Roughness {
        float m_fSizeMax;
        float m_fSizeMin;
        float m_fHeightMax;
        float m_fHeightMin;
        float m_fIntensity;
    };

    struct Part {
        float m_fResistanceMelee;
        float m_fResistanceGun;
        float m_fHealth;
        float m_fAbsoluteHealth;
    };


    struct DeformablePart {
        Part m_sPart;
        S_vector m_vDir;
    };
    
    float m_fMass;
    float m_fEngineEffectPower;
    float m_fEngineRedLinePower;
    float m_fEngineRedLineRpmMin;
    float m_fEngineRedLineRpmMax;
    float m_fEngineIdleRpm;
    float m_fEngineTorqueStart;
    float m_fEngineTorqueMax;
    float m_fEngineTorqueEnd;
    float m_fEngineEffectRpmMin;
    float m_fEngineEffectRpmMax;
    float m_fEngineStarterRpm;
    float m_fEngineStarterTime;
    float m_fEngineFlywheelRpm;
    float m_fGearboxShiftTransmissionTime;
    float m_fGearboxClutchTime;
    uint8_t pad0[4];
    float m_fEngineStartRpmMin;
    float m_fEngineStartRpmMax;
    float m_fNumGears;
    uint8_t pad1[132];
    float m_fSideForce;
    float m_fForwardForce;
    float m_fOversteerFactorMin;
    float m_fOversteerFactorMax;
    float m_fUndersteerFactorMin;
    float m_fUndersteerFactorMax;
    float m_fSteeringMaxAngle;
    float m_fSteeringMaxAngleInHighestSpeed;
    float m_fSteeringDifferentialAngle;
    float m_fSteeringAngleChange;
    float m_fSteeringAngleChangeDestroyed;
    float m_fSteeringAngleChangeBack;
    float m_fSteeringAngleChangeBackDestroyed;
    S_vector m_vCenter;
    float m_fGravity;
    float m_fFuelTank;
    float m_fFuelConsumption;
    uint8_t pad2[1192];
    float m_fBalance1;
    float m_fBalance2;
    float m_fBalance3;
    float m_fBrakeEfficiency;
    float m_fBrakeEfficiencyRestriction;
    float m_fHandbrakeEfficiency;
    float m_fHandbrakeEfficiencyRestriction;
    bool m_bUseCrashMultipliers;
    float m_fCrashForceMultiplier;
    float m_fCrashForceBackMultiplier;
    int m_iLooseAdhesionFactor;
    bool m_bABS;
    bool m_bESP;
    bool m_bSteeringIsInvisible;
    uint8_t pad3[5];
    bool m_bIgnoreHeadCollision;
    int m_iExhaustParticleID;
    float m_fExhaustParticleOff;
    float m_fExhaustParticleVelocityIdle;
    float m_fExhaustParticleVelocityDriving;
    uint8_t pad4[16];
    bool m_bHasRoughness;
    Roughness m_sRoughness;
    Part m_sEnginePart;
    float m_fEngineControlFuelAfterCrash;
    float m_fEngineParticle1On;
    float m_fEngineParticle2On;
    float m_fEngineParticle2Off;
    int m_iEngineParticle1Id;
    int m_iEngineParticle2Id;
    Part m_sGearboxPart;
    Part m_sWheelsPart;
    float m_fWheelsSemiDestroyedAngle;
    float m_fWheelsDamageToSemiDestroy;
    S_vector m_vBodyDeformDir;
    S_vector m_vResistanceDir;
    DeformablePart m_sBumpersPart;
    DeformablePart m_sWindowsPart;
    float m_fWindowsCrack;
    char m_szWindowsBrokenTexture[16];
    char m_szWindowsBrokenTextureAlpha[16];
    Part m_sLights;
    uint8_t pad6[4];
    S_vector m_vLightsDir;
    DeformablePart m_sLicencePlatesPart;
    DeformablePart m_sMirrorsPart;
    DeformablePart m_sWingsPart;
    DeformablePart m_sDoorsPart;
    DeformablePart m_sRoofPart;
    DeformablePart m_sUnkPart;
    uint8_t pad7[1184];
    char m_szSoundEngineOn[16];
    char m_szSoundEngineOff[16];
    char m_szSoundEngineBad[16];
    char m_szSoundEngineNpc[16];
    uint8_t pad8[240];
    char m_szSoundEngineNeutral[16];
    char m_szTyreDrivingSound[16];
    char m_szSoundHorn[16];
    char m_szSoundSiren[16];
    char m_szSoundHandbrake[16];
    char m_szSoundGearNext[16];
    char m_szSoundGearPrev[16];
    char m_szSoundDrift[16];
    char m_szSoundUnk[16];
    char m_szSoundCrashAbsorber[16];
    char m_szSoundShotInWheel[16];
    char m_szSoundGlassBreak[16];
    char m_szSoundCrashA1[16];
    char m_szSoundCrashK1[16];
    char m_szSoundCrashB1[16];
    char m_szSoundCrashC1[16];
    char m_szSoundCrashA2[16];
    char m_szSoundCrashK2[16];
    char m_szSoundCrashB2[16];
    char m_szSoundCrashC2[16];
    char m_szSoundDoorOpen[16];
    char m_szSoundDoorClose[16];
    float m_fEngineNPCSoundSpeedMin;
    float m_fEngineNPCSoundSpeedMax;
    float m_fEngineNPCSoundVolumeIdle;
    float m_fEngineNPCSoundVolumeDriving;
    uint8_t pad9[496];
    float m_fEngineNeutralFade;
    float m_fEngineNeutralVolume;
    float m_fTyreDrivingSoundSpeedMin;
    float m_fTyreDrivingSoundSpeedMax;
    float m_fTyreDrivingSoundCarSpeedMin;
    float m_fTyreDrivingSoundCarSpeedMax;
    float m_fTyreDrivingSoundVolume;
    uint8_t pad10[20];
};

struct S_wheel {
    uint32_t _pad0;
    I3D_frame* m_pFrame;
    char _pad1[80];
    S_vector m_vFrontDir;
    S_vector m_vUnk2;
    char _pad2[156];
    float m_fUnk1;
    float m_fUnk2;
    float m_fRot;
    float m_fUnk3;
    float m_fUnk4;
    uint32_t m_uFlags;
    char _pad4[96];
    float m_fSemiDestroyedAngle;
    float m_fWheelOutOfAxis;
    char _pad5[4];
    float m_fHealth;
    char _pad6[4];
    float m_fResistanceMelee;
    float m_fResistanceGun;
    float m_fDamageToSemiDestroy;
    float m_fRoughnessSizeMin;
    float m_fRoughnessSizeMax;
    float m_fRoughnessHeightMin;
    float m_fRoughnessHeightMax;
    float m_fRoughnessIntensity;
};

class C_Vehicle {
public:
    void EnableRightIndicator(bool bEnable);
    void DisableTurnIndicatorFlag(bool bEnable);
    void EnableLeftIndicator(bool bEnable);
    void SetLightFlags(uint32_t uFlags);
    void EnableLight(bool bEnable);
    void EnableLightsValue(bool bEnable);

    uint8_t _pad1[100];
    uint16_t m_iMoveFramesCnt;
    uint16_t m_iCurrentMoveFrame;
    S_vector m_vMovPosition;
    S_vector m_vMovForward;
    S_vector m_vMovUp;
    S_vector m_vMovRight;
    bool m_bIgnoreHeadCollision;
    uint8_t _pad2[31];
    int m_iSteeringVisibility;
    uint8_t _pad2_0[4];
    int m_iLockCount;
    float m_fLightsResistanceMelee;
    float m_fLightsResistanceGun;
    float m_fLightsHealth;
    float m_fLightsAbsoluteHealth;
    char _pad2_1[72];
    uint32_t m_uLightFlags;
    char _pad2_1_0[28];
    bool m_bUseCrashMultipliers;
    bool m_bHasRoughness;
    char _pad2_2[88];
    float m_fSteeringLinearity;
    float m_fClutchLinearity;
    uint8_t _pad3[4];
    uint32_t m_uFlags;
    uint8_t _pad3_0[4];
    float m_fEngineControlFuelAfterCrash;
    uint8_t _pad4[8];
    float m_fEngineHealth;
    float m_fEngineAbsoluteHealth;
    float m_fEngineResistanceMelee;
    float m_fEngineResistanceGun;
    float m_fEngineParticle1On;
    float m_fEngineParticle2On;
    float m_fEngineParticle2Off;
    int m_iEngineParticle1Id;
    int m_iEngineParticle2Id;
    uint8_t _pad5[16];
    float m_fHealth;
    float m_fGearboxHealth;
    float m_fGearboxAbsoluteHealth;
    float m_fGearboxResistanceMelee;
    float m_fGearboxResistanceGun;
    uint8_t _pad5_0[8];
    void* m_pDoors;
    uint8_t _pad6[12];
    void* m_pFirstMesh;
    void* m_pLastMesh;
    uint8_t _pad7_0[4];
    int m_iLooseAdhesionFactor;
    bool m_bHasABS;
    bool m_bHasESP;
    uint8_t _pad7_1[154];
    S_vector m_vUnk;
    uint8_t _pad7_2[4];
    S_vector m_vHeadPos;
    uint8_t _pad7[4];
    void* m_pCallbackCC;
    void* m_pCallbackCC1;
    void* m_pCallbackACI;
    void* m_pCallbackAF;
    void* m_pCallbackWC;
    void* m_pCallbackPD;
    void* m_pCallbackPDW;
    void* m_pCallbackBG;
    void* m_pCallbackUnk;
    void* m_pCallbackWU;
    void* m_pCallbackCFB;
    void* m_pCallbackCFW;
    void* m_pCallbackDVP;
    void* m_pCallbackVR;
    void* m_pCallbackLP;
    S_vector m_vPosition;
    uint8_t _pad8[36];
    float m_fUnk;
    float m_fWheelRotationReleatedStuff;
    uint8_t _pad8_0[12];
    S_vector m_vUnk1;
    S_vector m_vUnk2;
    uint8_t _pad8_1[16];
    float m_fCrashForceMultiplier;
    float m_fCrashForceBackMultiplier;
    uint8_t _pad8_2[16];
    float m_fEnginePower;
    float m_fEnginePower2;
    float m_fEngineRedLinePower;
    float m_fHandbrakeEfficiency;
    float m_fHandbrakeEfficiencyRestriction;
    float m_fHandbrakeCurrent;
    uint8_t _pad9[8];
    float m_fBrakeEfficiency;
    float m_fBrakeEfficiencyRestriction;
    float m_fBrakeCurrent;
    float m_fOversteerFactorMin;
    float m_fOversteerFactorMax;
    float m_fUndersteerFactorMin;
    float m_fUndersteerFactorMax;
    S_vector m_vUnk3;
    S_vector m_vUnk4;
    S_vector m_vUnk5;
    S_vector m_vUnk6;
    S_vector m_vGravityVelocity;
    float m_fEngineStarterTime;
    S_vector m_vAngularVelocity;
    uint8_t _pad11[4];
    bool m_bHorn;
    bool m_bSiren;
    bool m_bSoundEnabled;
    uint8_t _pad12_f;
    float m_fHandbrake;
    float m_fBalance1;
    float m_fBalance2;
    float m_fBalance3;
    float m_fBalance4;
    float m_fBalance5;
    float m_fBalance6;
    uint8_t _pad12_0[16];
    int m_iExhaustParticleID;
    uint8_t _pad12_1[4];
    float m_fExhaustParticleOff;
    float m_fExhaustParticleIdle;
    float m_fExhaustParticleDriving;
    float m_fEngineTorqueMax;
    float m_fEngineTorqueStart;
    uint8_t _pad12_2_0[4];
    float m_fEngineTorqueEnd;
    float m_fEngineEffectRpmMin;
    float m_fEngineEffectRpmMax;
    uint8_t _pad12_2_1[16];
    float m_fGravity;
    float m_fFuelConsumption;
    float m_fSpeedLimit;
    bool m_bDontInterpolateSteering;
    uint8_t _pad13;
    bool m_bDontInterpolateBrake;
    bool m_bDontInterpolateClutch;
    uint8_t _pad14[16];
    char* m_szModelName;
    uint8_t _pad14_1[4];
    uint32_t m_iWheelCnt;
    float m_fDeltaUpdateTime;
    uint8_t _pad15[100];
    float m_fEngineEffectPower;
    uint8_t _pad15_0[4];
    float m_fSideForce;
    float m_fForwardForce;
    float m_fAccelerating;
    uint8_t _pad16[4];
    float m_fRotations;
    uint8_t _pad16_2[4];
    float m_fEngineRpm;
    uint8_t _pad17[4];
    float m_fEngineIdleRpmHalf;
    int32_t m_iLastGear;
    int32_t m_iGear;
    float m_fEngineRedLineRpmMin;
    int32_t m_iMaxGear;
    int32_t m_iUnk1;
    float m_GearRatios[4];
    uint8_t _pad19[28];
    float m_fSpeed;
    uint8_t _pad20[24];
    float m_fBrake;
    float m_fEngineStarterRpm;
    uint8_t _pad21[4];
    float m_fEngineStartRpmMin;
    float m_fEngineStartRpmMax;
    uint8_t _pad21_0[4];
    float m_fEngineFlywheelRpm;
    float m_fGearboxClutchTime;
    float m_fGearboxShiftTransmissionTime;
    uint8_t _pad21_1[4];
    float m_fClutch;
    uint8_t _pad22[4];
    int m_Punk0;
    float m_fEngineIdleRpm;
    char _pad22APol[4];
    float m_fMass;
    float m_fMass2;
    S_vector m_vCenter;
    float m_fSteeringMaxAngle;
    float m_fSteeringMaxAngleInHighestSpeed;
    float m_fMaxSteerAngle;
    float m_fSteeringAngleChange;
    float m_fSteeringAngleChangeDestroyed;
    float m_fSteeringAngleChangeBack;
    float m_fSteeringAngleChangeBackDestroyed;
    float m_fSteerAngle;
    uint8_t _pad24[4];
    float m_fSteeringDifferentialAngle;
    uint8_t _pad24_0[108];
    I3D_sound* m_pHornSound2;
    I3D_sound* m_pSirenSound2;
    uint8_t _pad24_2[648];
    I3D_sound* m_pEngineOnSound;
    I3D_sound* m_pEngineOffSound;
    I3D_sound* m_pEngineBadSound;
    I3D_sound* m_pEngineNpcSound;
    I3D_sound* m_pEngineForwardSounds[10];
    I3D_sound* m_pEngineReverseSounds[5];
    I3D_sound* m_pEngineIdleSounds[2];
    I3D_sound* m_pHornSound;
    I3D_sound* m_pSirenSound;
    I3D_sound* m_pHandbrakeSound;
    I3D_sound* m_pGearNextSound;
    I3D_sound* m_pGearPrevSound;
    I3D_sound* m_pDriftSound;
    I3D_sound* m_pUnkSound;
    I3D_sound* m_pCrashAbsorberSound;
    I3D_sound* m_pShotInWheelSound;
    I3D_sound* m_pCrashA1Sound;
    I3D_sound* m_pCrashK1Sound;
    I3D_sound* m_pCrashB1Sound;
    I3D_sound* m_pCrashC1Sound;
    I3D_sound* m_pCrashA2Sound;
    I3D_sound* m_pCrashK2Sound;
    I3D_sound* m_pCrashB2Sound;
    I3D_sound* m_pCrashC2Sound;
    I3D_sound* m_pDoorOpenSound;
    I3D_sound* m_pDoorCloseSound;
    I3D_sound* m_pWheelPunctureSound;
    float m_fEngineNPCSoundSpeedMin;
    float m_fEngineNPCSoundSpeedMax;
    float m_fEngineNPCSoundVolumeIdle;
    float m_fEngineNPCSoundVolumeDriving;
    char _pad25[496];
    float m_fEngineNeutralFade;
    char _pad25_0[4];
    float m_fEngineNeutralVolume;
    float m_fTyreDrivingSoundSpeedMin;
    float m_fTyreDrivingSoundSpeedMax;
    float m_fTyreDrivingSoundCarSpeedMin;
    char _pad25_0_0[4];
    float m_fTyreDrivingSoundCarSpeedMax;
    float m_fTyreDrivingSoundVolume;
    char _pad25_0_1[44];
    float m_fTimePerMoveFrame;
    uint8_t _pad25_0_2[4];
    bool m_bIsEngineRunning;
    uint8_t _pad25_1[3];
    bool m_bIsEngineOn;
    float m_fFuel;
    uint8_t _pad25_3[2];
    S_wheel** m_pWheels;
    S_vector m_vForwardDir;
    S_vector m_vRightDir;
    S_vector m_vUpDir;
    uint8_t _pad27[20];
    C_car* m_pCar;
    uint8_t _pad27_0[40];
    void* m_pCarDoors;
    uint8_t _pad27_1[68];
    S_matrix m_mUnk0;
    S_matrix m_mUnk1;
    S_matrix m_mUnk2;
    S_matrix m_mUnk3;
    S_matrix m_mUnk4;
    I3D_frame* m_pBodyFrame;
    uint8_t _pad27_2[64];
    S_CARINIT m_sCarInit;
    S_vector m_vVelocity;
    float m_fEngineRedLineRpmMax;
    float m_fFuelTank;
    uint8_t _pad28[232];
    uint32_t m_uDestructionMode;
    uint8_t _pad29[13];
    bool m_bIsEngineBroken;
    uint8_t _pad30[270];

    friend class C_debug;
};

//constexpr int size = sizeof(C_Vehicle);